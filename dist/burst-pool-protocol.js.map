{
  "version": 3,
  "sources": [
    "burst-pool-protocol.js"
  ],
  "names": [
    "poolSession",
    "require",
    "poolConfig",
    "jsonMarkup",
    "jsonFormat",
    "url",
    "request",
    "compression",
    "express",
    "httpProxy",
    "path",
    "http",
    "bodyParser",
    "io",
    "ioSocket",
    "duplicate",
    "obj",
    "JSON",
    "parse",
    "stringify",
    "clientLogFormatted",
    "str",
    "emit",
    "initWalletProxy",
    "i",
    "wallets",
    "length",
    "proxy",
    "createProxyServer",
    "on",
    "err",
    "req",
    "res",
    "console",
    "log",
    "writeHead",
    "end",
    "proxify",
    "walletIndex",
    "getWalletNdx",
    "web",
    "target",
    "walletUrl",
    "e",
    "trace",
    "doRedirection",
    "body",
    "redirection",
    "enabled",
    "redirectUrl",
    "method",
    "transformRequest",
    "nonceSubmitReqHandler",
    "reqBody",
    "reqChunk",
    "isSubmitNonce",
    "connection",
    "destroy",
    "transformResponse",
    "nonceSubmitedHandler",
    "recvBuffer",
    "_write",
    "write",
    "data",
    "toString",
    "_end",
    "response",
    "call",
    "respondToGetMiningInfo",
    "getMiningInfoCache",
    "initHttpAPIServer",
    "poolHttpServer",
    "createServer",
    "hasOwnProperty",
    "isMiningInfo",
    "listen",
    "poolPort",
    "initWebsocketServer",
    "newClientHandler",
    "ioOption",
    "origins",
    "websocketPort",
    "sendHeartbeat",
    "setTimeout",
    "beat",
    "initWebserver",
    "app",
    "use",
    "threshold",
    "static",
    "join",
    "__dirname",
    "urlencoded",
    "extended",
    "get",
    "pipe",
    "post",
    "form",
    "next",
    "send",
    "httpPort",
    "consoleJson",
    "json",
    "render",
    "clientLogJson",
    "logWebsocketToConsole",
    "clientUnicastLogJson",
    "socket",
    "clientLog",
    "clientUnicastLog",
    "module",
    "exports",
    "start",
    "globalAgent",
    "maxSockets",
    "getWebsocket",
    "httpPostForm",
    "formData",
    "done",
    "requestType",
    "getWalletUrl"
  ],
  "mappings": "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",
  "file": "burst-pool-protocol.js",
  "sourcesContent": [
    "var poolSession = require('./burst-pool-session');\r\nvar poolConfig = require('./burst-pool-config');\r\nvar jsonMarkup = require('json-markup');\r\nvar jsonFormat = require('prettyjson');\r\nvar url = require('url');\r\nvar request = require('request');\r\nvar compression = require('compression');\r\nvar express = require('express');\r\nvar httpProxy = require('http-proxy');\r\nvar path = require('path');\r\nvar http = require('http');\r\nvar bodyParser = require('body-parser');\r\nvar io = require('socket.io')();\r\nvar ioSocket = null;\r\n\r\nfunction duplicate(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction clientLogFormatted(str) {\r\n    ioSocket.emit('log', str);\r\n}\r\n\r\nfunction initWalletProxy() {\r\n    for (var i = 0; i < poolConfig.wallets.length; i++) {\r\n        poolConfig.wallets[i].proxy = httpProxy.createProxyServer({});\r\n        poolConfig.wallets[i].proxy.on('error', function (err, req, res) {\r\n            console.log(err);\r\n            res.writeHead(500, {'Content-Type': 'text/plain'});\r\n            res.end('Internal Server Error, or Resource Temporary Unavailable');\r\n        });\r\n    }\r\n}\r\n\r\nfunction proxify(req, res) {\r\n    if (poolConfig.walletIndex < poolConfig.wallets.length) {\r\n        try {\r\n            var proxy = poolConfig.wallets[poolSession.getWalletNdx()].proxy;\r\n            proxy.web(req, res, {target: poolConfig.wallets[poolSession.getWalletNdx()].walletUrl});\r\n        }\r\n        catch (e) {\r\n            console.log('exception while proxify');\r\n            console.log(e);\r\n            console.trace();\r\n        }\r\n    }\r\n}\r\n\r\nfunction doRedirection(req, body) {\r\n    if (poolConfig.redirection.enabled === true) {\r\n        var redirectUrl = poolConfig.redirection.target + req.url;\r\n        request({\r\n            url: redirectUrl,\r\n            method: 'POST',\r\n            body: body\r\n        }, function () {\r\n        });\r\n    }\r\n}\r\n\r\nfunction transformRequest(req, res, nonceSubmitReqHandler) {\r\n    var reqBody = '';\r\n    req.on('data', function (reqChunk) {\r\n        if (req.isSubmitNonce === true) {\r\n            reqBody += reqChunk;\r\n            if (reqBody.length > 1024) {\r\n                req.connection.destroy();\r\n            }\r\n        }\r\n    });\r\n\r\n    req.on('end', function () {\r\n        if (req.isSubmitNonce === true) {\r\n            if (reqBody.length > 0) {\r\n                req.url = '/burst?' + reqBody;\r\n                nonceSubmitReqHandler(req);\r\n            }\r\n            reqBody = '';\r\n        }\r\n        doRedirection(req, reqBody);\r\n    });\r\n    nonceSubmitReqHandler(req);\r\n}\r\n\r\nfunction transformResponse(req, res, nonceSubmitedHandler) {\r\n    var recvBuffer = '';\r\n    var _write = res.write;\r\n    res.write = function (data) {\r\n        if (typeof data != 'undefined') {\r\n            recvBuffer += data.toString();\r\n        }\r\n    };\r\n\r\n    var _end = res.end;\r\n    res.end = function () {\r\n        try {\r\n            if (recvBuffer.length > 0) {\r\n                if (recvBuffer[0] != '{') {\r\n                    //console.log(recvBuffer);\r\n                }\r\n                else {\r\n                    var response = JSON.parse(recvBuffer);\r\n                    if (req.isSubmitNonce === true) {\r\n                        nonceSubmitedHandler(req, response);\r\n                    }\r\n                    //else if(req.isMiningInfo === true){\r\n                    //    recvBuffer = miningInfoHandler(response);\r\n                    //}\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            console.trace();\r\n        }\r\n        _write.call(res, recvBuffer);\r\n        _end.call(res);\r\n    }\r\n}\r\n\r\nfunction respondToGetMiningInfo(req, res) {\r\n    res.writeHead(200, {\"Content-Type\": \"application/json\"});\r\n    res.end(JSON.stringify(poolSession.getMiningInfoCache()));\r\n}\r\n\r\nfunction initHttpAPIServer(nonceSubmitReqHandler,\r\n                           nonceSubmitedHandler) {\r\n\r\n    var poolHttpServer = http.createServer(function (req, res) {\r\n        transformRequest(req, res, nonceSubmitReqHandler);\r\n        if (req.hasOwnProperty('isMiningInfo') && req.isMiningInfo) {\r\n            respondToGetMiningInfo(req, res);\r\n        }\r\n        else {\r\n            transformResponse(req, res, nonceSubmitedHandler);\r\n            proxify(req, res);\r\n        }\r\n    });\r\n\r\n    poolHttpServer.listen(poolConfig.poolPort, \"0.0.0.0\");\r\n    console.log(\"burst pool running on port \" + poolConfig.poolPort);\r\n}\r\n\r\nfunction initWebsocketServer(newClientHandler) {\r\n    var ioOption = {\r\n        origins: '*:*',\r\n        'pingTimeout': 60000,\r\n        'allowUpgrades': true,\r\n        'transports': [\r\n            'polling',\r\n            'websocket'\r\n        ]\r\n    };\r\n\r\n    ioSocket = io.listen(poolConfig.websocketPort, ioOption);\r\n    console.log(\"websocket running on port \" + poolConfig.websocketPort);\r\n    ioSocket.on('connection', newClientHandler);\r\n\r\n    function sendHeartbeat() {\r\n        setTimeout(sendHeartbeat, 5000);\r\n        ioSocket.emit('ping', {beat: 1});\r\n    }\r\n\r\n    setTimeout(sendHeartbeat, 5000);\r\n}\r\n\r\nfunction initWebserver() {\r\n    var app = express();\r\n\r\n    app.use(compression({\r\n        threshold: 64\r\n    }));\r\n    app.use(express.static(path.join(__dirname, 'client')));\r\n    app.use(bodyParser.urlencoded({\r\n        extended: true\r\n    }));\r\n\r\n    app.get('/burst', function (req, res) {\r\n        //setTimeout(function(){\r\n        request.get({\r\n            url: 'http://127.0.0.1:' + poolConfig.poolPort + req.url,\r\n            method: 'GET'\r\n        }).pipe(res);\r\n        //}, Math.random()*500);\r\n    });\r\n\r\n    app.post('/burst', function (req, res) {\r\n        //setTimeout(function(){\r\n        request({\r\n            url: 'http://127.0.0.1:' + poolConfig.poolPort + req.url,\r\n            method: 'POST',\r\n            form: req.body\r\n        }, function (err, response, body) {\r\n            if (typeof body != 'undefined' && body != null && body.length > 0) {\r\n                res.write(body);\r\n            }\r\n            res.end();\r\n        });\r\n        //}, Math.random()*500);\r\n    });\r\n\r\n    app.use(function (req, res, next) {\r\n        res.send('404 Not Found');\r\n    });\r\n\r\n\r\n    app.listen(poolConfig.httpPort, function () {\r\n        console.log('http server running on port ' + poolConfig.httpPort);\r\n    });\r\n}\r\n\r\nfunction consoleJson(json) {\r\n    try {\r\n        console.log(jsonFormat.render(json));\r\n    }\r\n    catch (e) {\r\n        console.log('jsonFormat error');\r\n        console.trace();\r\n    }\r\n}\r\n\r\nfunction clientLogJson(json) {\r\n    try {\r\n        var str = jsonMarkup(json);\r\n        ioSocket.emit('log', str);\r\n        if (poolConfig.logWebsocketToConsole === true) {\r\n            consoleJson(json);\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log(\"jsonMarkup error\");\r\n        console.trace();\r\n    }\r\n}\r\n\r\nfunction clientUnicastLogJson(socket, json) {\r\n    try {\r\n        var str = jsonMarkup(json);\r\n        socket.emit('log', str);\r\n    }\r\n    catch (e) {\r\n        console.log(\"jsonMarkup error\");\r\n        console.trace();\r\n    }\r\n}\r\n\r\nfunction clientLog(str) {\r\n    ioSocket.emit('log', '<span class=\"json-text\">' + str + '</span>');\r\n    if (poolConfig.logWebsocketToConsole === true) {\r\n        console.log(str);\r\n    }\r\n}\r\n\r\nfunction clientUnicastLog(socket, str) {\r\n    socket.emit('log', '<span class=\"json-text\">' + str + '</span>');\r\n    if (poolConfig.logWebsocketToConsole === true) {\r\n        console.log(str);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    start: function (nonceSubmitReqHandler, nonceSubmitedHandler, newClientHandler) {\r\n        try {\r\n            http.globalAgent.maxSockets = 100;\r\n            initWebserver();\r\n            initWalletProxy();\r\n            initHttpAPIServer(nonceSubmitReqHandler, nonceSubmitedHandler);\r\n            initWebsocketServer(newClientHandler);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            console.trace();\r\n        }\r\n    },\r\n    getWebsocket: function () {\r\n        return ioSocket;\r\n    },\r\n    clientLogJson: clientLogJson,\r\n    clientUnicastLogJson: clientUnicastLogJson,\r\n    clientLog: clientLog,\r\n    clientLogFormatted: clientLogFormatted,\r\n    clientUnicastLog: clientUnicastLog,\r\n    consoleJson: consoleJson,\r\n    httpPostForm: function (req, formData, done) {\r\n        try {\r\n            var form = duplicate(formData);\r\n            form.requestType = req;\r\n            request.post(\r\n                {\r\n                    url: poolSession.getWalletUrl(),\r\n                    form: form\r\n                },\r\n                done\r\n            );\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            console.trace();\r\n        }\r\n    }\r\n};"
  ]
}